---
import { getLangFromUrl } from "../i18n/utils";

import { languages } from "../i18n/ui";
const currentLanguage = getLangFromUrl(Astro.url);
const opposite = currentLanguage === "fr" ? "en" : "fr";
const img =
  currentLanguage === "fr"
    ? "../../assets/icons/great-britain-32.png"
    : "../../assets/icons/france-32.png";
let url = Astro.url.pathname.split("/").slice(2).join("/");
if (url !== "") url = "/" + opposite + "/" + url;
else url = "/" + opposite;
console.log(url);

interface languageMapping {
  [localeCode: string]: string;
}

export interface Props extends astroHTML.JSX.SelectHTMLAttributes {
  showFlag?: boolean;
  languageMapping?: languageMapping;
}

const supportedLanguages = ["en", "fr"];

const { pathname } = Astro.url;

const { showFlag = false, languageMapping, ...attributes } = Astro.props;
---

<a id="lang-switcher" href={url} class="language-switcher">
  <img id="lang-img" src={img} class="language-switcher" alt={`Change to ${opposite}`} />
</a>

<script>
  // Get references to our elements.
  const button = document.getElementById('lang-switcher') as HTMLAnchorElement;
  const img = document.getElementById('lang-img') as HTMLImageElement;

  // Check if the elements exist.
  if (button && img) {
    // Add click event listener to button.
    button.addEventListener('click', (event) => {
      // Prevent default behaviour of link.
      event.preventDefault();

      // Get the current language from the URL.
      const currentLang = button.href.split('/')[1];

      // Determine the new language.
      const newLang = currentLang === 'en' ? 'fr' : 'en';
      const oldhref = button.href;
      // Update the href attribute.
      button.href = button.href.replace(`/${currentLang}/`, `/${newLang}/`);

      // Update the img src attribute.
      img.src = currentLang === 'en' 
        ? '../../assets/icons/france-32.png' 
        : '../../assets/icons/great-britain-32.png';
        window.location.href = oldhref;
    });

  }
</script>
