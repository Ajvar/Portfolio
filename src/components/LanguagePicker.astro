---
import { getLangFromUrl } from "../i18n/utils";

import { languages } from '../i18n/ui';
const currentLanguage = getLangFromUrl(Astro.url);
let url = Astro.url.pathname.split("/").slice(2).join("/");
if (url !== "")
  url = "/" + url;
console.log(url);

interface languageMapping {
  [localeCode: string]: string;
}

export interface Props extends astroHTML.JSX.SelectHTMLAttributes {
  showFlag?: boolean;
  languageMapping?: languageMapping;
}

const supportedLanguages = ["en", "fr"];

const { pathname } = Astro.url;

const { showFlag = false, languageMapping, ...attributes } = Astro.props;
---

<!-- <select onchange="location = this.value;" {...attributes}>
  {
    supportedLanguages.map((supportedLanguage: string) => {
      const flag = showFlag ? localeEmoji(supportedLanguage) + " " : "";

      let nativeName = "";

      const label = flag + nativeName;

      return (
        <option value={value} selected={supportedLanguage === currentLanguage}>
          {label}
        </option>
      );
    })
  }
</select> -->

<ul>
  {Object.entries(languages).map(([lang, label]) => (
    <li>
      <a href={`/${lang}${url}`}>{label}</a>
    </li>
  ))}
</ul>
